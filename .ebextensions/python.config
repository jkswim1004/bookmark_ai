option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: application:application
  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/var/app/current"
    FLASK_APP: "application.py"
    FLASK_ENV: "production"
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: static

commands:
  01_install_gcc:
    command: "yum install -y gcc gcc-c++ python3-devel"
    ignoreErrors: false
  02_upgrade_pip:
    command: "/var/app/venv/*/bin/pip install --upgrade pip"
    ignoreErrors: true
  03_install_requirements:
    command: "/var/app/venv/*/bin/pip install -r requirements.txt"
    cwd: "/var/app/staging"
    ignoreErrors: false

container_commands:
  01_create_uploads_dir:
    command: "mkdir -p /var/app/current/uploads"
  02_set_permissions:
    command: "chmod 755 /var/app/current/uploads"
  03_set_ownership:
    command: "chown webapp:webapp /var/app/current/uploads"
    ignoreErrors: true

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01_set_permissions.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # uploads 디렉토리 권한 설정
      mkdir -p /var/app/current/uploads
      chown webapp:webapp /var/app/current/uploads
      chmod 755 /var/app/current/uploads 
